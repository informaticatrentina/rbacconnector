RBAC (Role Base Access Control)
=================================

RBAC (Role base access control) manage  role and permissions. It is used for
assign permission to role, assign role to user, creating new role, update existing role
:author:  Developer Team http://www.incaendo.com


INSTALLATION
------------

To setup backend connector you have to follow some steps mentioned below:

1. Checkout source code from repository and put into /protected/modules directory
   of your project.
   (git@git.ahref.eu:lib/rbacconnector.git)


CONFIGURATION
-------------

Configuration changes is to be done in config.php and console.php file of project.

 1. Change in config/config.php of project - import files of RBAC module
    ex.  array ('import' => array(
                              'application.modules.rbacconnector.models.*',
                              'application.modules.rbacconnector.components.*',
                              'application.modules.rbacconnector.*',
                              'application.modules.rbacconnector.controllers.*',
                             )
2. Add in config file of project
            'modules'=>array(
              'rbacconnector'
            )

3. PERMISSION  Define array of permission in local config file (/protected/config/local_config.php)
  of project.
      ex- define('PERMISSION', '["Edit story", "Can create story"]');

4. RBAC_ADMIN_USER The admin user email for rbac module. This user has all privilege. 
   This user can create new user, role and assign role to user etc.
      
USAGE
-----

Following lines describe how to use rbacconnector module in project for 
different aspects.

  1. Links for menu-bar of project
     a. Listing of role assigned to user    BASE_URL . '/rbacconnector/user/index'
     b. Assign new role to user             BASE_URL . '/rbacconnector/user/assign'    
     c. Change role of user                 BASE_URL . 'rbacconnector/user/assign?id=USER_ID'    
     d. Create new role                     BASE_URL . 'rbacconnector/role/add'    
     e. Role listing                        BASE_URL . rbacconnector/role/index'  
     f. Assign permission to role           BASE_URL . '/rbacconnector/permission/index'  
     g. Listing of permission assigned to role     BASE_URL . '/rbacconnector/permission/assign?id=ROLE_ID'  

2.  Get roles assigned to user
     
      User::getRoles(userEmail);

3.  Get permission assigned to user
    
      User::getPermission(userEmail); 
   
      if getting all permission role wise -
    
      User::getPermission(userEmail, true);

4.  Check permission for authorization
    
    User::checkPermission(userEmail, permission);    


DATABASE MIGRATION
------------------

Prerequisite:

1. You have setup the rbacconnector modules in your project.
2. You have create a database for your project.
3. You have created config files in project (/protected/config/config.php and
   protected/config/console.php) and pointed the right DB in it.

In order to migrate DB or perform DB updates run command::

      ./protected/yiic migrate up --migrationPath=application.modules.rbacconnector.migrations



REQUIREMENTS
------------

RBAC is developed on yii framework So all requirements of yii
framework must be fulfilled:

The minimum requirement by Yii is that your Web server supports PHP 5.1.0 or
above.

Please access the following URL to check if your Web server reaches the
requirements by Yii, assuming "YiiPath" is where Yii is installed.


DEPENDENCY LIST
---------------

PHP packages need to be installed are
        1. php5-cli
        2. php5-curl
        3. php5-mysql
